[project]
name = "empyrical-reloaded"
description = "empyrical computes performance and risk statistics commonly used in quantitative finance"
readme = "README.md"

authors = [
    { name = "Quantopian Inc" },
    { email = "pm@ml4trading.io" }
]
maintainers = [
    { name = "Stefan Jansen" },
    { email = "pm@ml4trading.io" }
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Operating System :: OS Independent"
]

requires-python = ">=3.7"
dynamic = ["version"]


license = { file = "LICENSE" }

dependencies = [
    "numpy >=1.9.2",
    "bottleneck >=1.3.0",
    "pandas >=1.0.0",
    "scipy >=0.15.1",
    "pandas-datareader >=0.4",
    "yfinance >=0.1.63",
]

[project.urls]
homepage = 'https://ml4trading.io'
documentation = "https://empyrical.ml4trading.io"
repository = 'https://github.com/stefan-jansen/empyrical-reloaded'

[build-system]
requires = [
    "setuptools>=54.0.0",
    "setuptools_scm[toml]>=6.2",
    "wheel>=0.31.0",
    "oldest-supported-numpy; python_version>='3.7'"
]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
test = [
    "tox>=2.3.1",
    "pytest>=6.2.3",
    "pytest-cov>=2.11.1",
    "flake8>=3.9.1",
    "black"
]

dev = [
    "flake8 >=3.9.1",
    "black",
    "pre-commit >=2.12.1"
]

doc = [
    "Cython",
    "Sphinx >=1.3.2",
    "numpydoc >=0.5.0",
    "sphinx-autobuild >=0.6.0",
    "pydata-sphinx-theme",
    "sphinx-markdown-tables",
    "sphinx_copybutton",
    "nbsphinx",
    "m2r2"
]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ['src']
exclude = ['tests*']

[tool.setuptools_scm]
write_to = "src/empyrical/_version.py"
version_scheme = 'guess-next-dev'
local_scheme = 'dirty-tag'

[tool.pytest]
testpaths = 'tests'
addopts = '-v'

[tool.cibuildwheel]
test-extras = "test"
test-command = "pytest -n 2 --reruns 5 {package}/tests"
build-verbosity = 3

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64", "universal2"]
test-skip = ["*universal2:arm64"]

[tool.cibuildwheel.linux]
archs = ["auto64"]
skip = "*musllinux*"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | _build
  | build
  | dist
  | setup.py
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310,311}-pandas{12,13,14,15}
isolated_build = True
skip_missing_interpreters = True
minversion = 3.23.0

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
usedevelop = True
setenv =
    MPLBACKEND = Agg

changedir = tmp
extras = test
deps =
    pandas12: pandas>=1.2.0,<1.3
    pandas13: pandas>=1.3.0,<1.4
    pandas14: pandas>=1.4.0,<1.5
    pandas15: pandas>=1.5.0,<1.6

commands =
    pytest --cov={toxinidir}/src --cov-report term  --cov-report=xml --cov-report=html:htmlcov {toxinidir}/tests
"""
